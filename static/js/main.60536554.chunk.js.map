{"version":3,"sources":["assets/logo.png","components/Title.js","firebase/config.js","hooks/useStorage.js","components/ProgressBar.js","components/UploadForm.js","hooks/useFirestore.js","components/ImageGrid.js","components/Modal.js","App.js","index.js"],"names":["module","exports","Title","className","id","src","logo","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","s","onClick","img","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60536554.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e5536f78.png\";","import React from 'react';\nimport logo from '../assets/logo.png'\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <div id=\"logo\">\n        <img src = {logo}/>\n        <h1>Alat-Too PhotoStock</h1>\n      </div>\n      \n      <h2>Your Pictures</h2>\n      <p>Share your university life!</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyABBgjZud5GSayQ0voIf4A_SiJmvS5NXgU\",\n  authDomain: \"alatoo-photostock.firebaseapp.com\",\n  projectId: \"alatoo-photostock\",\n  storageBucket: \"alatoo-photostock.appspot.com\",\n  messagingSenderId: \"1053103277628\",\n  appId: \"1:1053103277628:web:070afdbe890be015e16539\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n    \n    storageRef.put(file).on('state_changed', (snap) => {\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n      setProgress(percentage);\n    }, (err) => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      const createdAt = timestamp();\n      await collectionRef.add({ url, createdAt });\n      setUrl(url);\n    });\n  }, [file]);\n\n  return { progress, url, error };\n}\n\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { progress, url } = useStorage(file);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <motion.div className=\"progress-bar\"\n      initial={{ width: 0 }}\n      animate={{ width: progress + '%' }}\n    ></motion.div>\n  );\n} \n\nexport default ProgressBar;","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = ['image/png', 'image/jpeg'];\n\n  const handleChange = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please upload .png or .jpeg image file');\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        <input type=\"file\" onChange={handleChange} />\n        <span>Add picture</span>\n      </label>\n      <div className=\"output\">\n        { error && <div className=\"error\">{ error }</div>}\n        { file && <div>{ file.name }</div> }\n        { file && <ProgressBar file={file} setFile={setFile} /> }\n      </div>\n    </form>\n  );\n}\n\nexport default UploadForm;","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = projectFirestore.collection(collection)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot(snap => {\n        let documents = [];\n        snap.forEach(doc => {\n          documents.push({...doc.data(), id: doc.id});\n        });\n        setDocs(documents);\n      });\n\n    return () => unsub();\n    // this is a cleanup function that react will run when\n    // a component using the hook unmounts\n  }, [collection]);\n\n  return { docs };\n}\n\nexport default useFirestore;","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore('images');\n\n  return (\n    <div className=\"img-grid\">\n      {docs && docs.map(doc => (\n        <motion.div className=\"img-wrap\" key={doc.id} \n          layout\n          whileHover={{ opacity: 1 }}s\n          onClick={() => setSelectedImg(doc.url)}\n        >\n          <motion.img src={doc.url} alt=\"uploaded pic\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 1 }}\n          />\n        </motion.div>\n      ))}\n    </div>\n  )\n}\n\nexport default ImageGrid;","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ setSelectedImg, selectedImg }) => {\n\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null);\n    }\n  }\n\n  return (\n    <motion.div className=\"backdrop\" onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img src={selectedImg} alt=\"enlarged pic\" \n        initial={{ y: \"-100vh\" }}\n        animate={{ y: 0 }}\n      />\n    </motion.div>\n  )\n}\n\nexport default Modal;","import React, { useState } from 'react';\nimport Title from './components/Title';\nimport UploadForm from './components/UploadForm';\nimport ImageGrid from './components/ImageGrid';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}